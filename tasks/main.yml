---
# Include var files
- name: Include version-specific variables for CentOS/RHEL.
  include_vars: "RedHat-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_distribution == 'CentOS' or
        ansible_distribution == 'Red Hat Enterprise Linux' or
        ansible_distribution == 'RedHat'
  tags: ['include']

- name: Include version-specific variables for Ubuntu.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version }}.yml"
  when: ansible_distribution == 'Ubuntu'
  tags: ['include']

- name: Include version-specific variables for Debian.
  include_vars: "{{ ansible_distribution }}-{{ ansible_distribution_version.split('.')[0] }}.yml"
  when: ansible_distribution == 'Debian'
  tags: ['include']

# Include setup tasks
- include_tasks: "{{ ansible_distribution }}-setup.yml"
  when: ansible_os_family == 'RedHat'
  tags: ['include_tasks']

- include_tasks: "{{ ansible_distribution }}-setup.yml"
  when: ansible_distribution == 'Debian'
  tags: ['include_tasks']

- include_tasks: "{{ ansible_distribution }}-setup.yml"
  when: ansible_distribution == 'Ubuntu'
  tags: ['include_tasks']

# Actual installation tasks
- name: Install PHP cli.
  package:
    name: "{{_php_package_prefix}}-cli"
    state: present
  tags: ['package']
  when: php_install_cli

- name: Install PHP packages.
  package:
    name: "{{_php_package_prefix}}-{{item}}"
    state: present
  tags: ['package']
  with_items: "{{ php_install_extensions }}"

- name: Install PHP-FPM.
  package:
    name: "{{_php_package_prefix}}-fpm"
    state: present
  tags: ['package']
  when: php_install_fpm

# Configuration tasks
- name: "Configure PHP CLI"
  lineinfile:
    line: "{{ item.name + ' = ' + item.value }}"
    path: "{{ __php_config_path_cli }}"
    regexp: "{{ ';?' + item.name + ' =(.*)?'}}"
    state: present
  tags: ['lineinfile']
  when: php_install_cli
  loop: "{{ php_ini_config }}"

- name: "Configure PHP-FPM"
  lineinfile:
    line: "{{ item.name + ' = ' + item.value }}"
    path: "{{ __php_config_path_cli }}"
    regexp: "{{ ';?' + item.name + ' =(.*)?'}}"
    state: present
  tags: ['lineinfile']
  loop: "{{ php_ini_config }}"
  when: ( php_install_cli and __php_config_path_cli != __php_config_path_fpm ) or
        ( php_install_cli == False and php_install_fpm)

- name: Create PHP-FPM pool configurations.
  template:
    dest: "{{ __php_pool_path }}/{{ item.key }}.conf"
    src: pool.conf.j2
  tags: ['template']
  when: php_install_fpm
  loop: "{{ php_fpm_pools|dict2items }}"
